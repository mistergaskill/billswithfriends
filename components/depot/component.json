{
  "name": "depot",
  "description": "depot.js is a namespaced localStorage wrapper with a simple API.",
  "main": "depot.js",
  "version": "0.1.4",
  "dependencies": {
    "es5-shim": "git://github.com/kriskowal/es5-shim.git#2.0.0"
  },
  "gitHead": "edac16dae8b4e9f5a87b6b646f4d0909c2b96c4d",
  "readme": "## depot.js\n\n[![build status](https://secure.travis-ci.org/mkuklis/depot.js.png)](http://travis-ci.org/mkuklis/depot.js)\n\n![depot.js](http://oi45.tinypic.com/xoiq7l.jpg)\n\n\n## Description\n\n**depot.js** is a namespaced [localStorage](http://diveintohtml5.info/storage.html) wrapper with a simple API.\nThere are [other](http://brian.io/lawnchair/) [tools](https://github.com/marcuswestin/store.js/) out there but none\nof them had what I was looking for.\n\n\n## Installation\n\ndepot.js should work well with CommonJS and AMD loaders.\nIf loaders are not present depot.js will attach itself to the current context (window).\n\ndepot.js is also a [bower](https://github.com/twitter/bower) [component](http://sindresorhus.com/bower-components/) so you should be able to install it by running:\n\n`bower install depot`\n\nor if you already have a bower based project you can add depot.js to your dependency list in `component.json`\n\n```js\n \"dependencies\": {\n    ...\n    \"depot\": \"0.x.x\"\n    ...\n  }\n```\n\n\n## Dependencies\n\ndepot.js does not depend on any other libraries however if you plan to support older browsers you will need to include [ES5-shim](https://github.com/kriskowal/es5-shim).\n\nIf you plan to run it on browsers that don't support [localStorage](http://diveintohtml5.info/storage.html) you may try to include [storage polyfill](https://gist.github.com/remy/350433).\n\n## API\n\n+ save(record)\n\n+ updateAll(hash)\n\n+ update(hash)\n\n+ find(hash | function)\n\n+ all()\n\n+ destroy(id | record)\n\n+ destroyAll(none | hash | function)\n\n+ get(id)\n\n+ size()\n\n##Usage\n\n####Define new store\n\n```js\nvar todoStore = depot('todos');\n```\n\n####Add new records\n\n`_id` property will be generated and attached to each new record:\n\n```js\ntodoStore.save({ title: \"todo1\" });\ntodoStore.save({ title: \"todo2\", completed: true });\ntodoStore.save({ title: \"todo3\", completed: true });\n```\n\n####Update all records\n\n```js\ntodoStore.updateAll({ completed: false });\n```\n\n####Return all records\n\n```js\ntodoStore.all(); // [{ id: 1, title \"todo1\" }, {id: 2, title: todo2 }]\n```\n\n####Find records\n\n* find based on given criteria\n\n```js\ntodoStore.find({ completed: true }); // [{ id: 2, title: \"todo2\" }, { id: 3, title: \"todo3\" }]\n```\n\n* find based on given function\n\n```js\ntodoStore.find(function (record) {\n  return record.completed && record.title == \"todo3\";\n}); // [{ id: 3, title: \"todo3\" }]\n```\n\n\n####Return single record by id\n\n```js\ntodoStore.get(1); // { id: 1, title: \"todo1\" }\n```\n\n####Destroy single record\n\n* by record id\n\n```js\ntodoStore.destroy(1);\n```\n\n* by record object\n\n```js\ntodoStore.destroy(todo);\n```\n\n####Destroy all records\n\n* destroy all\n\n```js\ntodoStore.destroyAll();\n```\n\n* destroy by given criteria\n\n```js\ntodoStore.destroyAll({ completed: true });\n```\n\n* destroy by given function\n\n```js\ntodoStore.destroyAll(function (record) {\n  return record.completed && record.title == \"todo3\";\n});\n```\n\n##Options\n\nYou can pass a second parameter to depot.js with additional options.\n\n```js\nvar todoStore = depot(\"todos\", options);\n```\n\nCurrently the only option available is `idAttribute`\nwhich can be used to override default record id (_id) property:\n\n```js\nvar todoStore = depot(\"todos\", { idAttribute: 'id' });\n```\n\n##Contributors:\n\n* [@mkuklis](http://github.com/mkuklis)\n* [@scttnlsn](http://github.com/scttnlsn)\n* [@chrispitt](http://github.com/chrispitt)\n\n##License:\n<pre>\nThe MIT License\n</pre>\n",
  "readmeFilename": "README.md",
  "_id": "depot@0.1.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/mkuklis/depot.js"
  }
}